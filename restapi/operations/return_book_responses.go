// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"Rest_API_Swagger_Design_First/models"
)

// ReturnBookOKCode is the HTTP code returned for type ReturnBookOK
const ReturnBookOKCode int = 200

/*
ReturnBookOK OK

swagger:response returnBookOK
*/
type ReturnBookOK struct {

	/*
	  In: Body
	*/
	Payload *models.Book `json:"body,omitempty"`
}

// NewReturnBookOK creates ReturnBookOK with default headers values
func NewReturnBookOK() *ReturnBookOK {

	return &ReturnBookOK{}
}

// WithPayload adds the payload to the return book o k response
func (o *ReturnBookOK) WithPayload(payload *models.Book) *ReturnBookOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the return book o k response
func (o *ReturnBookOK) SetPayload(payload *models.Book) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReturnBookOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
ReturnBookDefault generic error response

swagger:response returnBookDefault
*/
type ReturnBookDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewReturnBookDefault creates ReturnBookDefault with default headers values
func NewReturnBookDefault(code int) *ReturnBookDefault {
	if code <= 0 {
		code = 500
	}

	return &ReturnBookDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the return book default response
func (o *ReturnBookDefault) WithStatusCode(code int) *ReturnBookDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the return book default response
func (o *ReturnBookDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the return book default response
func (o *ReturnBookDefault) WithPayload(payload *models.Error) *ReturnBookDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the return book default response
func (o *ReturnBookDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ReturnBookDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
