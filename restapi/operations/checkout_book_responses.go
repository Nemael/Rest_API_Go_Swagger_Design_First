// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"Rest_API_Swagger_Design_First/models"
)

// CheckoutBookOKCode is the HTTP code returned for type CheckoutBookOK
const CheckoutBookOKCode int = 200

/*
CheckoutBookOK OK

swagger:response checkoutBookOK
*/
type CheckoutBookOK struct {

	/*
	  In: Body
	*/
	Payload *models.Book `json:"body,omitempty"`
}

// NewCheckoutBookOK creates CheckoutBookOK with default headers values
func NewCheckoutBookOK() *CheckoutBookOK {

	return &CheckoutBookOK{}
}

// WithPayload adds the payload to the checkout book o k response
func (o *CheckoutBookOK) WithPayload(payload *models.Book) *CheckoutBookOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the checkout book o k response
func (o *CheckoutBookOK) SetPayload(payload *models.Book) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckoutBookOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CheckoutBookDefault generic error response

swagger:response checkoutBookDefault
*/
type CheckoutBookDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCheckoutBookDefault creates CheckoutBookDefault with default headers values
func NewCheckoutBookDefault(code int) *CheckoutBookDefault {
	if code <= 0 {
		code = 500
	}

	return &CheckoutBookDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the checkout book default response
func (o *CheckoutBookDefault) WithStatusCode(code int) *CheckoutBookDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the checkout book default response
func (o *CheckoutBookDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the checkout book default response
func (o *CheckoutBookDefault) WithPayload(payload *models.Error) *CheckoutBookDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the checkout book default response
func (o *CheckoutBookDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CheckoutBookDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
